{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_baseUrl": {
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/sharepoint-three-vm"
    },
    "adUsePublicIP": {
      "type": "bool",
      "defaultValue": false
    },
    "adVMSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the AD VM Created"
      },
      "defaultValue": "Standard_A2_V2"
    },
    "commonDNSPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS Prefix for the Public IP Addresses"
      }
    },
    "commonStorageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name prefix of the new storage account created to store the VMs disks"
      }
    },
    "commonStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Premium_LRS",
        "Standard_LRS",
        "Standard_GRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },
    "create2013Farm": {
      "type": "bool"
    },
    "create2016Farm": {
      "type": "bool"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      },
      "defaultValue": "contoso.local"
    },
    "spDefaultSiteTemplateName": {
      "type": "string",
      "metadata": {
        "description": "The Sharepoint Content Site Template Name"
      },
      "defaultValue": "STS#0"
    },
    "spFarmName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Sharepoint farm"
      },
      "defaultValue": "spfarm"
    },
    "spFarmPassphrase": {
      "type": "securestring",
      "metadata": {
        "description": "The Sharepoint Farm Passphrase"
      }
    },
    "spUsePublicIP": {
      "type": "bool",
      "defaultValue": false
    },
    "spVMSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the VM Created"
      },
      "defaultValue": "Standard_DS3"
    },
    "sqlUsePublicIP": {
      "type": "bool",
      "defaultValue": false
    },
    "sqlVMSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the SQL VM Created"
      },
      "defaultValue": "Standard_DS2"
    },
    "userAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password forthe Administrator account of the new VM and Domain"
      }
    },
    "userAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      }
    },
    "userSPFarmPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The Sharepoint Farm account password"
      }
    },
    "userSPFarmUsername": {
      "type": "string",
      "metadata": {
        "description": "The Sharepoint Farm account name"
      }
    },
    "userSPSetupPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The Sharepoint Setup account password"
      }
    },
    "userSPSetupUsername": {
      "type": "string",
      "metadata": {
        "description": "The Sharepoint Setup account name"
      }
    },
    "userSQLServicePassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server Service account password"
      }
    },
    "userSQLServiceUsername": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server Service account name"
      }
    },
    "osDiskStorageType": {
      "type": "string"
    },
    "dataDiskStorageType": {
      "type": "string"
    }
  },
  "variables": {
    "_assetLocation": "[concat(parameters('_baseUrl'),'/dsc')]",
    "adAvailabilitySetName": "[concat(parameters('spFarmName'),'-ad1-as')]",
    "adNicAddress": "10.0.0.4",
    "adNicName": "[concat(parameters('spFarmName'), '-ad1-nic')]",
    "adPublicIPAddressName": "[concat(parameters('spFarmName'), '-ad1-pip')]",
    "adPublicIpResourceId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('adPublicIPAddressName'))]",
    "adVMName": "[concat(parameters('spFarmName'),'-ad1')]",
    "commonNetworkSecurityGroupId": "[toLower(resourceId('Microsoft.Network/networkSecurityGroups', variables('commonNetworkSecurityGroupName')))]",
    "commonNetworkSecurityGroupName": "[concat(parameters('spFarmName'), '-common-nsg')]",
    "commonStorageAccountName": "[concat(parameters('commonStorageAccountNamePrefix'), '01')]",
    "commonSubnetName": "common",
    "commonSubnetRef": "[concat(variables('commonVirtualNetworkId'),'/subnets/',variables('commonSubnetName'))]",
    "commonVirtualNetworkId": "[resourceId('Microsoft.Network/virtualNetworks', variables('commonVirtualNetworkName'))]",
    "commonVirtualNetworkName": "[concat(parameters('spFarmName'), '-vnet')]",
    "dbAdminContentName": "SP_AdminContent",
    "dbConfigName": "SP_Config",
    "dbContentName": "WSS_Content_80",
    "dscADConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
    "dscADModulesUrl": "[concat(variables('_assetLocation'),'/ProvisionDomainController.ps1.zip')]",
    "dscSPPrepareModulesUrl": "[concat(variables('_assetLocation'), '/PrepareSharePointServer.ps1.zip')]",
    "dscSPPrepareFunction": "PrepareSharePointServer.ps1\\PrepareSharePointServer",
    "dscSQLPrepareModulesUrl": "[concat(variables('_assetLocation'), '/PrepareSqlServer.ps1.zip')]",
    "dscSQLPrepareFunction": "PrepareSqlServer.ps1\\PrepareSqlServer",
    "dscSP13ConfigureModulesUrl": "[concat(variables('_assetLocation'), '/ConfigureSharePointServer2013.ps1.zip')]",
    "dscSP16ConfigureModulesUrl": "[concat(variables('_assetLocation'), '/ConfigureSharePointServer2016.ps1.zip')]",
    "dscSPConfigureFunction": "ConfigureSharePointServer.ps1\\ConfigureSharePointServer",
    "dscSQLConfigureModulesUrl": "[concat(variables('_assetLocation'), '/ConfigureSqlServer.ps1.zip')]",
    "dscSQLConfigureFunction": "ConfigureSqlServer.ps1\\ConfigureSqlServer",
    "urlCreatingAvailabilitySet": "[concat(parameters('_baseUrl'),'/creatingAvailabilitySet.json')]",
    "urlCreatingNetworkSecurityGroup": "[concat(parameters('_baseUrl'),'/creatingNetworkSecurityGroup.json')]",
    "urlCreatingNIC": "[concat(parameters('_baseUrl'),'/creatingNIC.json')]",
    "urlCreatingPublicIP": "[concat(parameters('_baseUrl'),'/creatingPublicIP.json')]",
    "urlCreatingSection": "[concat(parameters('_baseUrl'),'/creatingSection.json')]",
    "urlCreatingStorageAccount": "[concat(parameters('_baseUrl'),'/creatingStorageAccount.json')]",
    "urlCreatingVNet": "[concat(parameters('_baseUrl'),'/creatingVNet.json')]",
    "urlProvisioningDomainController": "[concat(parameters('_baseUrl'),'/provisioningDomainController.json')]",
    "urlProvisioningSPServer": "[concat(parameters('_baseUrl'),'/provisioningSharePoint.json')]",
    "urlProvisioningSQLServer": "[concat(parameters('_baseUrl'),'/provisioningSQL.json')]",
    "urlConfiguringSPServer": "[concat(parameters('_baseUrl'),'/configuringSharePoint.json')]",
    "urlConfiguringSQLServer": "[concat(parameters('_baseUrl'),'/configuringSQL.json')]",
    "urlUpdatingNICPublicIP": "[concat(parameters('_baseUrl'),'/updatingNICPublicIP.json')]"
  },
  "resources": [
    {
      "name": "CreatingStorageAccount-Common",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urlCreatingStorageAccount')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountType": {
            "value": "[parameters('commonStorageAccountType')]"
          },
          "storageAccountName": {
            "value": "[variables('commonStorageAccountName')]"
          }
        }
      }
    },
    {
      "name": "CreatingAvailabilitySet-AD",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urlCreatingAvailabilitySet')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "availabilitySetName": {
            "value": "[variables('adAvailabilitySetName')]"
          }
        }
      }
    },
    {
      "name": "CreatingPublicIP-AD",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urlCreatingPublicIP')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsPrefix": {
            "value": "[concat(parameters('commonDNSPrefix'), '-ad')]"
          },
          "publicIPAddressName": {
            "value": "[variables('adPublicIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "Dynamic"
          }
        }
      }
    },
    {
      "name": "CreatingNetworkSecurityGroup-AD",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urlCreatingNetworkSecurityGroup')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nsgName": {
            "value": "[variables('commonNetworkSecurityGroupName')]"
          },
          "securityRules": {
            "value": [
              {
                "name": "allow-rdp",
                "properties": {
                  "description": "Allow inbound RDP",
                  "protocol": "Tcp",
                  "sourcePortRange": "*",
                  "destinationPortRange": "3389",
                  "sourceAddressPrefix": "*",
                  "destinationAddressPrefix": "*",
                  "access": "Allow",
                  "priority": 101,
                  "direction": "Inbound"
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "CreatingVirtualNetwork-Common",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingNetworkSecurityGroup-AD"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urlCreatingVNet')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('commonVirtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "10.0.0.0/16"
          },
          "subnets": {
            "value": [
              {
                "name": "[variables('commonSubnetName')]",
                "properties": {
                  "addressPrefix": "10.0.0.0/24",
                  "networkSecurityGroup": {
                    "id": "[variables('commonNetworkSecurityGroupId')]"
                  }
                }
              },
              {
                "name": "2013",
                "properties": {
                  "addressPrefix": "10.0.1.0/24"
                }
              },
              {
                "name": "2016",
                "properties": {
                  "addressPrefix": "10.0.2.0/24"
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "CreatingNetworkInterface-AD",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingPublicIP-AD",
        "Microsoft.Resources/deployments/CreatingVirtualNetwork-Common"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urlCreatingNIC')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicName": {
            "value": "[variables('adNicName')]"
          },
          "nicIPAddress": {
            "value": "10.0.0.4"
          },
          "subnetRef": {
            "value": "[variables('commonSubnetRef')]"
          }
        }
      }
    },
    {
      "name": "UpdatingNetworkInterfacePublicIP-AD",
      "condition": "[parameters('adUsePublicIP')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingPublicIP-AD",
        "Microsoft.Resources/deployments/CreatingNetworkInterface-AD"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urlUpdatingNICPublicIP')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicName": {
            "value": "[variables('adNicName')]"
          },
          "nicIPAddress": {
            "value": "[variables('adNicAddress')]"
          },
          "subnetRef": {
            "value": "[variables('commonSubnetRef')]"
          },
          "publicIPId": {
            "value": "[variables('adPublicIpResourceId')]"
          }
        }
      }
    },
    {
      "name": "ProvisioningDomainController",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingStorageAccount-Common",
        "Microsoft.Resources/deployments/CreatingAvailabilitySet-AD",
        "Microsoft.Resources/deployments/CreatingNetworkInterface-AD"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urlProvisioningDomainController')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('adVMName')]"
          },
          "vmSize": {
            "value": "[parameters('adVMSize')]"
          },
          "availabilitySetName": {
            "value": "[variables('adAvailabilitySetName')]"
          },
          "userAdminUsername": {
            "value": "[parameters('userAdminUsername')]"
          },
          "userAdminPassword": {
            "value": "[parameters('userAdminPassword')]"
          },
          "storageAccountName": {
            "value": "[variables('commonStorageAccountName')]"
          },
          "nicName": {
            "value": "[variables('adNicName')]"
          },
          "dscModulesUrl": {
            "value": "[variables('dscADModulesUrl')]"
          },
          "dscConfigurationFunction": {
            "value": "[variables('dscADConfigurationFunction')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "osDiskStorageType": {
            "value": "[parameters('osDiskStorageType')]"
          },
          "dataDiskStorageType": {
            "value": "[parameters('dataDiskStorageType')]"
          }
        }
      }
    },
    {
      "name": "CreatingSection-2013",
      "comments": "Deploy the SharePoint 2013 farm with SQL Server",
      "condition": "[parameters('create2013Farm')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingStorageAccount-Common",
        "Microsoft.Resources/deployments/CreatingVirtualNetwork-Common"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urlCreatingSection')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adNicAddress": {
            "value": "[variables('adNicAddress')]"
          },
          "dbAdminContentName": {
            "value": "[variables('dbAdminContentName')]"
          },
          "dbConfigName": {
            "value": "[variables('dbConfigName')]"
          },
          "dbDefaultSiteConfigName": {
            "value": "[variables('dbContentName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "spDefaultSiteTemplateName": {
            "value": "[parameters('spDefaultSiteTemplateName')]"
          },
          "spDNSPrefix": {
            "value": "[concat(parameters('commonDNSPrefix'), '13-sp')]"
          },
          "spFarmNamePrefix": {
            "value": "[parameters('spFarmName')]"
          },
          "spFarmPassphrase": {
            "value": "[parameters('spFarmPassphrase')]"
          },
          "spNicIpAddress": {
            "value": "10.0.1.4"
          },
          "spUsePublicIP": {
            "value": "[parameters('spUsePublicIP')]"
          },
          "spVersion": {
            "value": "2013"
          },
          "spVMSize": {
            "value": "[parameters('spVMSize')]"
          },
          "sqlDNSPrefix": {
            "value": "[concat(parameters('commonDNSPrefix'), '13-sql')]"
          },
          "sqlNicIpAddress": {
            "value": "10.0.1.5"
          },
          "sqlUsePublicIP": {
            "value": "[parameters('sqlUsePublicIP')]"
          },
          "sqlVersion": {
            "value": "SQL2014SP2-WS2012R2"
          },
          "sqlVMSize": {
            "value": "[parameters('sqlVMSize')]"
          },
          "storageAccountName": {
            "value": "[variables('commonStorageAccountName')]"
          },
          "subnetAddressRange": {
            "value": "10.0.1.0/24"
          },
          "urlCreatingAvailabilitySet": {
            "value": "[variables('urlCreatingAvailabilitySet')]"
          },
          "urlCreatingNetworkInterface": {
            "value": "[variables('urlCreatingNIC')]"
          },
          "urlCreatingNetworkSecurityGroup": {
            "value": "[variables('urlCreatingNetworkSecurityGroup')]"
          },
          "urlCreatingPublicIP": {
            "value": "[variables('urlCreatingPublicIP')]"
          },
          "urlProvisioningSPServer": {
            "value": "[variables('urlProvisioningSPServer')]"
          },
          "urlProvisioningSQLServer": {
            "value": "[variables('urlProvisioningSQLServer')]"
          },
          "urlConfiguringSPServer": {
            "value": "[variables('urlConfiguringSPServer')]"
          },
          "urlConfiguringSQLServer": {
            "value": "[variables('urlConfiguringSQLServer')]"
          },
          "urlUpdatingNICPublicIP": {
            "value": "[variables('urlUpdatingNICPublicIP')]"
          },
          "userAdminPassword": {
            "value": "[parameters('userAdminPassword')]"
          },
          "userAdminUsername": {
            "value": "[parameters('userAdminUsername')]"
          },
          "userSPFarmPassword": {
            "value": "[parameters('userSPFarmPassword')]"
          },
          "userSPFarmUsername": {
            "value": "[parameters('userSPFarmUsername')]"
          },
          "userSPSetupPassword": {
            "value": "[parameters('userSPSetupPassword')]"
          },
          "userSPSetupUsername": {
            "value": "[parameters('userSPSetupUsername')]"
          },
          "userSQLServicePassword": {
            "value": "[parameters('userSQLServicePassword')]"
          },
          "userSQLServiceUsername": {
            "value": "[parameters('userSQLServiceUsername')]"
          },
          "vNetName": {
            "value": "[variables('commonVirtualNetworkName')]"
          },
          "dscSPPrepareModulesUrl": {
            "value": "[variables('dscSPPrepareModulesUrl')]"
          },
          "dscSPPrepareFunction": {
            "value": "[variables('dscSPPrepareFunction')]"
          },
          "dscSQLPrepareModulesUrl": {
            "value": "[variables('dscSQLPrepareModulesUrl')]"
          },
          "dscSQLPrepareFunction": {
            "value": "[variables('dscSQLPrepareFunction')]"
          },
          "dscSPConfigureModulesUrl": {
            "value": "[variables('dscSP13ConfigureModulesUrl')]"
          },
          "dscSPConfigureFunction": {
            "value": "[variables('dscSPConfigureFunction')]"
          },
          "dscSQLConfigureModulesUrl": {
            "value": "[variables('dscSQLConfigureModulesUrl')]"
          },
          "dscSQLConfigureFunction": {
            "value": "[variables('dscSQLConfigureFunction')]"
          },
          "osDiskStorageType": {
            "value": "[parameters('osDiskStorageType')]"
          },
          "dataDiskStorageType": {
            "value": "[parameters('dataDiskStorageType')]"
          }
        }
      }
    },
    {
      "name": "CreatingSection-2016",
      "comments": "Deploy the SharePoint 2016 farm with SQL Server",
      "condition": "[parameters('create2016Farm')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingStorageAccount-Common",
        "Microsoft.Resources/deployments/CreatingVirtualNetwork-Common"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urlCreatingSection')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adNicAddress": {
            "value": "[variables('adNicAddress')]"
          },
          "dbAdminContentName": {
            "value": "[variables('dbAdminContentName')]"
          },
          "dbConfigName": {
            "value": "[variables('dbConfigName')]"
          },
          "dbDefaultSiteConfigName": {
            "value": "[variables('dbContentName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "spDefaultSiteTemplateName": {
            "value": "[parameters('spDefaultSiteTemplateName')]"
          },
          "spDNSPrefix": {
            "value": "[concat(parameters('commonDNSPrefix'), '-sp16')]"
          },
          "spFarmNamePrefix": {
            "value": "[parameters('spFarmName')]"
          },
          "spFarmPassphrase": {
            "value": "[parameters('spFarmPassphrase')]"
          },
          "spNicIpAddress": {
            "value": "10.0.2.4"
          },
          "spUsePublicIP": {
            "value": "[parameters('spUsePublicIP')]"
          },
          "spVersion": {
            "value": "2016"
          },
          "spVMSize": {
            "value": "[parameters('spVMSize')]"
          },
          "sqlDNSPrefix": {
            "value": "[concat(parameters('commonDNSPrefix'), '-sql16')]"
          },
          "sqlNicIpAddress": {
            "value": "10.0.2.5"
          },
          "sqlUsePublicIP": {
            "value": "[parameters('sqlUsePublicIP')]"
          },
          "sqlVersion": {
            "value": "SQL2016SP1-WS2016"
          },
          "sqlVMSize": {
            "value": "[parameters('sqlVMSize')]"
          },
          "storageAccountName": {
            "value": "[variables('commonStorageAccountName')]"
          },
          "subnetAddressRange": {
            "value": "10.0.2.0/24"
          },
          "urlCreatingAvailabilitySet": {
            "value": "[variables('urlCreatingAvailabilitySet')]"
          },
          "urlCreatingNetworkInterface": {
            "value": "[variables('urlCreatingNIC')]"
          },
          "urlCreatingNetworkSecurityGroup": {
            "value": "[variables('urlCreatingNetworkSecurityGroup')]"
          },
          "urlCreatingPublicIP": {
            "value": "[variables('urlCreatingPublicIP')]"
          },
          "urlProvisioningSPServer": {
            "value": "[variables('urlProvisioningSPServer')]"
          },
          "urlProvisioningSQLServer": {
            "value": "[variables('urlProvisioningSQLServer')]"
          },
          "urlConfiguringSPServer": {
            "value": "[variables('urlConfiguringSPServer')]"
          },
          "urlConfiguringSQLServer": {
            "value": "[variables('urlConfiguringSQLServer')]"
          },
          "urlUpdatingNICPublicIP": {
            "value": "[variables('urlUpdatingNICPublicIP')]"
          },
          "userAdminPassword": {
            "value": "[parameters('userAdminPassword')]"
          },
          "userAdminUsername": {
            "value": "[parameters('userAdminUsername')]"
          },
          "userSPFarmPassword": {
            "value": "[parameters('userSPFarmPassword')]"
          },
          "userSPFarmUsername": {
            "value": "[parameters('userSPFarmUsername')]"
          },
          "userSPSetupPassword": {
            "value": "[parameters('userSPSetupPassword')]"
          },
          "userSPSetupUsername": {
            "value": "[parameters('userSPSetupUsername')]"
          },
          "userSQLServicePassword": {
            "value": "[parameters('userSQLServicePassword')]"
          },
          "userSQLServiceUsername": {
            "value": "[parameters('userSQLServiceUsername')]"
          },
          "vNetName": {
            "value": "[variables('commonVirtualNetworkName')]"
          },
          "dscSPPrepareModulesUrl": {
            "value": "[variables('dscSPPrepareModulesUrl')]"
          },
          "dscSPPrepareFunction": {
            "value": "[variables('dscSPPrepareFunction')]"
          },
          "dscSQLPrepareModulesUrl": {
            "value": "[variables('dscSQLPrepareModulesUrl')]"
          },
          "dscSQLPrepareFunction": {
            "value": "[variables('dscSQLPrepareFunction')]"
          },
          "dscSPConfigureModulesUrl": {
            "value": "[variables('dscSP16ConfigureModulesUrl')]"
          },
          "dscSPConfigureFunction": {
            "value": "[variables('dscSPConfigureFunction')]"
          },
          "dscSQLConfigureModulesUrl": {
            "value": "[variables('dscSQLConfigureModulesUrl')]"
          },
          "dscSQLConfigureFunction": {
            "value": "[variables('dscSQLConfigureFunction')]"
          },
          "osDiskStorageType": {
            "value": "[parameters('osDiskStorageType')]"
          },
          "dataDiskStorageType": {
            "value": "[parameters('dataDiskStorageType')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}
